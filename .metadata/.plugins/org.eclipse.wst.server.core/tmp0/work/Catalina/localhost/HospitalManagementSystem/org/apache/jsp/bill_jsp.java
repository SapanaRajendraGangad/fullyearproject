/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-05-23 18:01:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bill_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


int pid;

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function add(){\r\n");
      out.write("	var a=document.getElementById(\"r\").value;\r\n");
      out.write("	var b=document.getElementById(\"f\").value;\r\n");
      out.write("	var c=parseInt(a)+parseInt(b);\r\n");
      out.write("	document.getElementById(\"l\").value=c;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("        .all {\r\n");
      out.write("            height: 100vh;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            background-image: url(\"images/bill.jpg\");\r\n");
      out.write("            background-size: cover;\r\n");
      out.write("            background-repeat: no-repeat;\r\n");
      out.write("            background-position: center;\r\n");
      out.write("        }\r\n");
      out.write("        .menu {\r\n");
      out.write("            height: 15vh;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            background-color: blue;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("        .menu h1 {\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        form {\r\n");
      out.write("            max-width: 90%;\r\n");
      out.write("            width: 500px;\r\n");
      out.write("            background-color: blue;\r\n");
      out.write("            margin: 5vh auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            align-items: flex-start;\r\n");
      out.write("        }\r\n");
      out.write("        input, select {\r\n");
      out.write("            height: 50px;\r\n");
      out.write("            width: calc(100% - 20px);\r\n");
      out.write("            margin: 10px;\r\n");
      out.write("            padding: 0 10px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        input[type=submit], button {\r\n");
      out.write("            width: 20%;\r\n");
      out.write("            height: 5vh;\r\n");
      out.write("            border-radius: 5vh;\r\n");
      out.write("            background-color: black;\r\n");
      out.write("            color: white;\r\n");
      out.write("            margin-top: 2vh;\r\n");
      out.write("        }\r\n");
      out.write("        label {\r\n");
      out.write("            margin-left: 10px;\r\n");
      out.write("            color: white;\r\n");
      out.write("            margin-bottom: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        h1 {\r\n");
      out.write("            margin-left: 20px;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            form {\r\n");
      out.write("                width: 95%;\r\n");
      out.write("                padding: 2vh;\r\n");
      out.write("            }\r\n");
      out.write("            input, select {\r\n");
      out.write("                height: 6vh;\r\n");
      out.write("                font-size: 1em;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        @media (max-width: 480px) {\r\n");
      out.write("            input, select {\r\n");
      out.write("                height: 6vh;\r\n");
      out.write("                font-size: 1em;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"all\">\r\n");
      out.write('\r');
      out.write('\n');

pid=Integer.parseInt(request.getParameter("pid"));

      out.write("\r\n");
      out.write("<div class=\"menu\">\r\n");
      out.write("<h1>\r\n");
      out.write("Hospital Management System\r\n");
      out.write("</h1>\r\n");
      out.write("</div>\r\n");
      out.write("<form action=\"bill\" name=\"frm\" method=\"get\">\r\n");
      out.write("<h1>Bill</h1>\r\n");
      out.write("<input type='hidden' name=\"pid\" value=");
      out.print(pid );
      out.write(" value=\"\">\r\n");
      out.write("<label>Date</label>\r\n");
      out.write("<input type='date' id=\"sr1\" name=\"date\" placeholder=\"Enter the date\" value=\"\">\r\n");
      out.write("<label>  Doctor Fee</label>\r\n");
      out.write("<input type=text name=\"doctor_Fee\" id=\"r\" placeholder=\"Enter the Doctor Fees\" value=\"\">\r\n");
      out.write("<label>Room Fee</label>\r\n");
      out.write("<input type=text name=\"room_Fee\" id=\"f\" placeholder=\"Enter the Medical Fees\" value=\"\">\r\n");
      out.write("<label>Total</label>\r\n");
      out.write("<input type=text name=\"total\" id=\"l\" onclick=\"add()\" value=\"\">\r\n");
      out.write("<input type=\"submit\" name=\"s\" value=\"Add Bill\">\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
